{"ast":null,"code":"var _jsxFileName = \"D:\\\\Private\\\\Project\\\\user-desktop-frontend\\\\src\\\\component\\\\employee\\\\FormEmployee.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardBody, CardHeader, Col, Form, FormGroup, Input, Label, Modal, ModalBody, Row } from \"reactstrap\";\nimport { HANDLE_INPUT, RESET_FORM } from \"../actions/EmployeeAction\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { addUser, editUser } from \"../../services/EmployeeService\";\nimport DatePicker from \"react-datepicker\";\nimport Icon from \"../../shared/icons/Icon\";\n\nfunction FormEmployee(props) {\n  const {\n    form,\n    handleInputChange,\n    history,\n    resetForm\n  } = props;\n  const [job, setJob] = useState([\"PNS\", \"Wirausaha\", \"Wiraswasta\"]);\n  const [lastEducation, setLastEducation] = useState([\"SD\", \"SMP\", \"SMA\", \"Diploma\", \"Sarjana\", \"Magister\", \"Doktor\"]);\n  const [successMessage, setSuccessMessage] = useState({\n    message: \"\",\n    open: false\n  });\n\n  const handleFormSubmit = event => {\n    event.preventDefault();\n    const date = form.birthDate.split(\"-\");\n    form.birthDate = `${date[2]}-${date[1]}-${date[0]}`;\n    console.log(\"FORM\", form);\n\n    if (form.id) {\n      editUser(form).then(() => {\n        resetForm();\n        setSuccessMessage({\n          message: \"Edit user success!!\",\n          open: !successMessage.open\n        });\n      });\n    } else {\n      addUser(form).then(() => {\n        resetForm();\n        setSuccessMessage({\n          message: \"Insert new employee success!!\",\n          open: !successMessage.open\n        });\n      });\n    }\n  };\n\n  const isValidForm = () => {\n    return form.name.trim().length > 0 && form.birthDate && form.job.trim().length > 0 && form.lastEducation.trim().length > 0 && form.ktp.trim().length > 0;\n  };\n\n  const toggleForm = () => {\n    setSuccessMessage({\n      message: successMessage.message,\n      open: !successMessage.open\n    });\n    history.replace(\"/\");\n  };\n\n  return /*#__PURE__*/React.createElement(Row, {\n    style: {\n      margin: 20\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      size: 6,\n      offset: 3\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    tag: \"strong\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 21\n    }\n  }, !form.id ? \"Insert New Employee\" : \"Edit employee\"), /*#__PURE__*/React.createElement(CardBody, {\n    className: \"p-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    onSubmit: handleFormSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    md: 3,\n    for: \"name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 33\n    }\n  }, \"Employee Name\"), /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"text\",\n    id: \"name\",\n    name: \"name\",\n    placeholder: \"Insert name\",\n    value: form.name,\n    onChange: event => handleInputChange(\"name\", event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 33\n    }\n  }, \"Id Number\"), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"tel\",\n    min: 0,\n    maxLength: 16,\n    id: \"ktp\",\n    name: \"ktp\",\n    placeholder: \"Insert identity number (KTP)\",\n    value: form.ktp,\n    onChange: event => {\n      const value = event.target.value.replace(/[^0-9]/g, \"\");\n      handleInputChange(\"ktp\", value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 33\n    }\n  }, \"Birth Date\"), /*#__PURE__*/React.createElement(Col, {\n    md: 4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"date\",\n    name: \"birthDate\",\n    id: \"birthDate\",\n    placeholder: \"dd/MM/yyyy\",\n    value: form.birthDate,\n    onChange: event => handleInputChange(\"birth_date\", event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 37\n    }\n  }))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 33\n    }\n  }, \"Job\"), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    id: \"job\",\n    name: \"job\",\n    value: form.job,\n    onChange: event => handleInputChange(\"job\", event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 41\n    }\n  }, \"-Select job-\"), job.map((job, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: job,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 53\n      }\n    }, job);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Label, {\n    md: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 33\n    }\n  }, \"Last Education\"), /*#__PURE__*/React.createElement(Col, {\n    md: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Input, {\n    type: \"select\",\n    id: \"lastEducation\",\n    name: \"lastEducation\",\n    value: form.last_education,\n    onChange: event => handleInputChange(\"last_education\", event.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 41\n    }\n  }, \"-Select last education-\"), lastEducation.map((lastEducation, index) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: index,\n      value: lastEducation,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 53\n      }\n    }, lastEducation);\n  })))), /*#__PURE__*/React.createElement(FormGroup, {\n    className: \"mt-5\",\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: {\n      offset: 7\n    },\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    className: \"shadow\",\n    disabled: !isValidForm(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"fas check-square\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 38\n    }\n  }), \" Confirm \")), /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"button\",\n    className: \"shadow\",\n    onClick: resetForm,\n    style: {\n      cursor: \"pointer\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 41\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"fas arrow-left\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 42\n    }\n  }), \" Back \")))))))), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: successMessage.open,\n    toggle: toggleForm,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 205,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    md: 9,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"h4\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 29\n    }\n  }, successMessage.message)), /*#__PURE__*/React.createElement(Col, {\n    md: {\n      offset: 1\n    },\n    className: \"ml-5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"far check-circle\",\n    color: \"green\",\n    size: \"2x\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 214,\n      columnNumber: 29\n    }\n  }))))));\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleInputChange: (inputName, inputValue) => dispatch({\n      type: HANDLE_INPUT,\n      payload: {\n        inputName,\n        inputValue\n      }\n    }),\n    resetForm: () => dispatch({\n      type: RESET_FORM\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(FormEmployee));","map":{"version":3,"sources":["D:/Private/Project/user-desktop-frontend/src/component/employee/FormEmployee.js"],"names":["React","useEffect","useState","Button","Card","CardBody","CardHeader","Col","Form","FormGroup","Input","Label","Modal","ModalBody","Row","HANDLE_INPUT","RESET_FORM","connect","Link","withRouter","addUser","editUser","DatePicker","Icon","FormEmployee","props","form","handleInputChange","history","resetForm","job","setJob","lastEducation","setLastEducation","successMessage","setSuccessMessage","message","open","handleFormSubmit","event","preventDefault","date","birthDate","split","console","log","id","then","isValidForm","name","trim","length","ktp","toggleForm","replace","margin","size","offset","target","value","map","index","last_education","cursor","mapStateToProps","state","mapDispatchToProps","dispatch","inputName","inputValue","type","payload"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardBody,\r\n    CardHeader,\r\n    Col,\r\n    Form,\r\n    FormGroup,\r\n    Input,\r\n    Label,\r\n    Modal,\r\n    ModalBody,\r\n    Row\r\n} from \"reactstrap\";\r\nimport {HANDLE_INPUT, RESET_FORM} from \"../actions/EmployeeAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {addUser, editUser} from \"../../services/EmployeeService\";\r\nimport DatePicker from \"react-datepicker\"\r\nimport Icon from \"../../shared/icons/Icon\";\r\n\r\nfunction FormEmployee(props) {\r\n\r\n    const {form,handleInputChange,history,resetForm} = props\r\n    const [job,setJob] = useState([\"PNS\",\"Wirausaha\",\"Wiraswasta\"])\r\n    const [lastEducation,setLastEducation] = useState(\r\n        [\r\n            \"SD\",\r\n            \"SMP\",\r\n            \"SMA\",\r\n            \"Diploma\",\r\n            \"Sarjana\",\r\n            \"Magister\",\r\n            \"Doktor\"\r\n        ])\r\n    const [successMessage,setSuccessMessage] = useState({message:\"\",open: false})\r\n\r\n    const handleFormSubmit = (event)=>{\r\n        event.preventDefault()\r\n\r\n        const date  = form.birthDate.split(\"-\")\r\n\r\n        form.birthDate = `${date[2]}-${date[1]}-${date[0]}`\r\n        console.log(\"FORM\",form)\r\n\r\n        if (form.id){\r\n            editUser(form)\r\n                .then(()=>{\r\n                    resetForm()\r\n                    setSuccessMessage({\r\n                        message: \"Edit user success!!\",\r\n                        open: !successMessage.open\r\n                    })\r\n                })\r\n        } else {\r\n            addUser(form)\r\n                .then(()=>{\r\n                    resetForm()\r\n                    setSuccessMessage({\r\n                        message: \"Insert new employee success!!\",\r\n                        open: !successMessage.open\r\n                    })\r\n                })\r\n        }\r\n    }\r\n\r\n    const isValidForm = ()=>{\r\n        return (form.name.trim().length>0 && form.birthDate && form.job.trim().length>0\r\n                            && form.lastEducation.trim().length>0 && form.ktp.trim().length>0)\r\n    }\r\n\r\n    const toggleForm = ()=>{\r\n        setSuccessMessage({message: successMessage.message,open: !successMessage.open});\r\n        history.replace(\"/\")\r\n    }\r\n\r\n    return(\r\n        <Row style={{margin: 20}}>\r\n            <Col md={{size:6,offset:3}}>\r\n                <Card className=\"shadow\">\r\n                    <CardHeader tag=\"strong\" className=\"text-center\">{!form.id ? \"Insert New Employee\" : \"Edit employee\"}</CardHeader>\r\n                    <CardBody className=\"p-3\">\r\n                        <Form onSubmit={handleFormSubmit}>\r\n                            <FormGroup row>\r\n                                <Label md={3} for=\"name\">Employee Name</Label>\r\n                                <Col md={9}>\r\n                                    <Input\r\n                                        type=\"text\"\r\n                                        id=\"name\"\r\n                                        name=\"name\"\r\n                                        placeholder=\"Insert name\"\r\n                                        value={form.name}\r\n                                        onChange={(event => handleInputChange(\"name\",event.target.value))}\r\n                                    />\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label md={3}>Id Number</Label>\r\n                                <Col>\r\n                                    <Input\r\n                                        type=\"tel\"\r\n                                        min={0}\r\n                                        maxLength={16}\r\n                                        id=\"ktp\"\r\n                                        name=\"ktp\"\r\n                                        placeholder=\"Insert identity number (KTP)\"\r\n                                        value={form.ktp}\r\n                                        onChange={(event => {\r\n                                            const value = event.target.value.replace(/[^0-9]/g,\"\")\r\n                                            handleInputChange(\"ktp\",value)\r\n                                    })}/>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label md={3}>Birth Date</Label>\r\n                                <Col md={4}>\r\n                                    <Input\r\n                                        type=\"date\"\r\n                                        name=\"birthDate\"\r\n                                        id=\"birthDate\"\r\n                                        placeholder=\"dd/MM/yyyy\"\r\n                                        value={form.birthDate}\r\n                                        onChange={event => handleInputChange(\"birth_date\",event.target.value)}\r\n                                    />\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label md={3}>Job</Label>\r\n                                <Col md={6}>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        id=\"job\"\r\n                                        name=\"job\"\r\n                                        value={form.job}\r\n                                        onChange={(event => handleInputChange(\"job\",event.target.value))}\r\n                                    >\r\n                                        <option>-Select job-</option>\r\n                                        {\r\n                                            job.map((job,index)=>{\r\n                                                return(\r\n                                                    <option\r\n                                                        key={index}\r\n                                                        value={job}\r\n                                                    >{job}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup row>\r\n                                <Label md={3}>Last Education</Label>\r\n                                <Col md={6}>\r\n                                    <Input\r\n                                        type=\"select\"\r\n                                        id=\"lastEducation\"\r\n                                        name=\"lastEducation\"\r\n                                        value={form.last_education}\r\n                                        onChange={(event => handleInputChange(\"last_education\",event.target.value))}\r\n                                    >\r\n                                        <option>-Select last education-</option>\r\n                                        {\r\n                                            lastEducation.map((lastEducation,index)=>{\r\n                                                return(\r\n                                                    <option\r\n                                                        key={index}\r\n                                                        value={lastEducation}\r\n                                                    >{lastEducation}</option>\r\n                                                )\r\n                                            })\r\n                                        }\r\n                                    </Input>\r\n                                </Col>\r\n                            </FormGroup>\r\n\r\n                            <FormGroup className=\"mt-5\" row>\r\n                                <Col md={{offset:7}} className=\"mr-2\">\r\n                                    <Button\r\n                                        type=\"submit\"\r\n                                        color=\"primary\"\r\n                                        className=\"shadow\"\r\n                                        disabled={!isValidForm()}\r\n                                    ><Icon icon=\"fas check-square\"/> Confirm </Button>\r\n                                </Col>\r\n                                <Col>\r\n                                    <Link to=\"/\">\r\n                                        <Button\r\n                                            type=\"button\"\r\n                                            className=\"shadow\"\r\n                                            onClick={resetForm}\r\n                                            style={{cursor: \"pointer\"}}\r\n                                        ><Icon icon=\"fas arrow-left\"/> Back </Button>\r\n                                    </Link>\r\n                                </Col>\r\n                            </FormGroup>\r\n                        </Form>\r\n                    </CardBody>\r\n                </Card>\r\n            </Col>\r\n            <Modal isOpen={successMessage.open} toggle={toggleForm}>\r\n                <ModalBody>\r\n                    <Row>\r\n                        <Col md={9}>\r\n                            <h4>\r\n                                {successMessage.message}\r\n                            </h4>\r\n                        </Col>\r\n                        <Col md={{offset:1}} className=\"ml-5\">\r\n                            <Icon icon=\"far check-circle\" color=\"green\" size=\"2x\"/>\r\n                        </Col>\r\n                    </Row>\r\n                </ModalBody>\r\n            </Modal>\r\n        </Row>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {...state}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleInputChange : (inputName,inputValue)=>dispatch({type:HANDLE_INPUT,payload:{inputName,inputValue}}),\r\n        resetForm : ()=>dispatch({type:RESET_FORM})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(FormEmployee))"]},"metadata":{},"sourceType":"module"}