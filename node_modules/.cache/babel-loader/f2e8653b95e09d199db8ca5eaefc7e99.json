{"ast":null,"code":"var _jsxFileName = \"D:\\\\Private\\\\Project\\\\user-desktop-frontend\\\\src\\\\component\\\\employee\\\\EmployeeList.js\";\nimport React, { useEffect, useState } from \"react\";\nimport { Button, Card, CardHeader, Col, Modal, ModalBody, ModalFooter, ModalHeader, Row, Spinner, Table } from \"reactstrap\";\nimport { FETCH_COMPLETE, HANDLE_DELETE, HANDLE_EDIT, SET_LOADING } from \"../actions/EmployeeAction\";\nimport { connect } from \"react-redux\";\nimport { Link, withRouter } from \"react-router-dom\";\nimport { deleteEmployee, getAllEmployee } from \"../../services/EmployeeService\";\nimport Icon from \"../../shared/icons/Icon\";\n\nfunction EmployeeList(props) {\n  const [open, setOpen] = useState(false);\n  const [user, setUser] = useState(\"\");\n  const [modal, setModal] = useState(false);\n  const [message, setMessage] = useState(\"\");\n\n  const toggle = () => {\n    setOpen(!open);\n  };\n\n  const toggleButton = () => {\n    setModal(!modal);\n  };\n\n  const loadData = () => {\n    const {\n      setLoading,\n      fetchComplete\n    } = props;\n    setLoading();\n    getAllEmployee().then(user => {\n      fetchComplete(user);\n    });\n  };\n\n  useEffect(() => {\n    loadData();\n  }, []);\n\n  const handleEditButton = id => {\n    const {\n      handleEdit,\n      history\n    } = props;\n    handleEdit(id);\n    history.replace(\"/form\");\n  };\n\n  const generateTableRow = () => {\n    const {\n      users,\n      isLoading\n    } = props;\n    let rows = /*#__PURE__*/React.createElement(\"tr\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"td\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Spinner, {\n      className: \"text-center\",\n      type: \"grow\",\n      \"aria-colspan\": 6,\n      color: \"info\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }\n    })));\n\n    if (!isLoading) {\n      rows = /*#__PURE__*/React.createElement(\"tr\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(\"td\", {\n        colSpan: 8,\n        className: \"table-warning text-center\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(\"strong\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 75\n        }\n      }, /*#__PURE__*/React.createElement(\"em\", {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 83\n        }\n      }, \"No User(s) yet.\"))));\n    }\n\n    if (users.length > 0 && !isLoading) {\n      rows = users.map((user, index) => {\n        return /*#__PURE__*/React.createElement(\"tr\", {\n          key: index,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"th\", {\n          scope: \"row\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 25\n          }\n        }, index + 1), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }\n        }, user.name), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }\n        }, user.birthDate), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }\n        }, user.ktp), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 25\n          }\n        }, user.job), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }\n        }, user.lastEducation), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          color: \"warning\",\n          size: \"sm\",\n          className: \"shadow\",\n          onClick: () => handleEditButton(user.id),\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          icon: \"fas edit\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 30\n          }\n        }), \" Edit\")), /*#__PURE__*/React.createElement(\"td\", {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }\n        }, /*#__PURE__*/React.createElement(Button, {\n          type: \"button\",\n          color: \"danger\",\n          size: \"sm\",\n          className: \"shadow\",\n          onClick: () => {\n            setUser(user.id);\n            toggle();\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 82,\n            columnNumber: 29\n          }\n        }, /*#__PURE__*/React.createElement(Icon, {\n          icon: \"fas info\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 30\n          }\n        }), \" Detail \")));\n      });\n    }\n\n    return rows;\n  };\n\n  return /*#__PURE__*/React.createElement(Card, {\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    tag: \"strong\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Link, {\n    to: \"/form\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"primary\",\n    className: \"shadow\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    icon: \"fas plus\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 72\n    }\n  }), \" Add\"))), /*#__PURE__*/React.createElement(Col, {\n    md: {\n      size: 7,\n      offset: 2\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 25\n    }\n  }, \"Employee List\")))), /*#__PURE__*/React.createElement(Table, {\n    striped: true,\n    hover: true,\n    responsive: true,\n    className: \"m-0\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"thead\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"tr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"th\", {\n    width: \"5%\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 25\n    }\n  }, \"No.\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 25\n    }\n  }, \"Name\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 25\n    }\n  }, \"Birth Date\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 25\n    }\n  }, \"KTP\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 25\n    }\n  }, \"Job\"), /*#__PURE__*/React.createElement(\"th\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 25\n    }\n  }, \"LastEducation\"), /*#__PURE__*/React.createElement(\"th\", {\n    colSpan: 2,\n    width: \"15%\",\n    className: \"text-center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 25\n    }\n  }, \"Actions\"))), /*#__PURE__*/React.createElement(\"tbody\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 17\n    }\n  }, generateTableRow())), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: open,\n    toggle: toggle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Modal, {\n    isOpen: modal,\n    toggle: toggleButton,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(ModalBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 17\n    }\n  }, message)));\n}\n\nfunction mapStateToProps(state) {\n  return { ...state\n  };\n}\n\nfunction mapDispatchToProps(dispatch) {\n  return {\n    handleEdit: id => dispatch({\n      type: HANDLE_EDIT,\n      payload: id\n    }),\n    setLoading: () => dispatch({\n      type: SET_LOADING\n    }),\n    fetchComplete: payload => dispatch({\n      type: FETCH_COMPLETE,\n      payload\n    })\n  };\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(withRouter(EmployeeList));","map":{"version":3,"sources":["D:/Private/Project/user-desktop-frontend/src/component/employee/EmployeeList.js"],"names":["React","useEffect","useState","Button","Card","CardHeader","Col","Modal","ModalBody","ModalFooter","ModalHeader","Row","Spinner","Table","FETCH_COMPLETE","HANDLE_DELETE","HANDLE_EDIT","SET_LOADING","connect","Link","withRouter","deleteEmployee","getAllEmployee","Icon","EmployeeList","props","open","setOpen","user","setUser","modal","setModal","message","setMessage","toggle","toggleButton","loadData","setLoading","fetchComplete","then","handleEditButton","id","handleEdit","history","replace","generateTableRow","users","isLoading","rows","length","map","index","name","birthDate","ktp","job","lastEducation","size","offset","mapStateToProps","state","mapDispatchToProps","dispatch","type","payload"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport {\r\n    Button,\r\n    Card,\r\n    CardHeader,\r\n    Col,\r\n    Modal,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalHeader,\r\n    Row,\r\n    Spinner,\r\n    Table\r\n} from \"reactstrap\";\r\nimport {FETCH_COMPLETE, HANDLE_DELETE, HANDLE_EDIT, SET_LOADING} from \"../actions/EmployeeAction\";\r\nimport {connect} from \"react-redux\";\r\nimport {Link, withRouter} from \"react-router-dom\";\r\nimport {deleteEmployee, getAllEmployee} from \"../../services/EmployeeService\";\r\nimport Icon from \"../../shared/icons/Icon\";\r\n\r\nfunction EmployeeList (props) {\r\n    const [open,setOpen] = useState(false)\r\n    const [user,setUser] = useState(\"\")\r\n    const [modal,setModal] = useState(false)\r\n    const [message,setMessage] = useState(\"\")\r\n\r\n    const toggle = ()=>{setOpen(!open)}\r\n    const toggleButton = ()=>{setModal(!modal)}\r\n\r\n    const loadData = () =>{\r\n        const {setLoading,fetchComplete} = props\r\n        setLoading();\r\n        getAllEmployee()\r\n            .then((user)=>{\r\n                fetchComplete(user)\r\n            })\r\n    }\r\n\r\n    useEffect(()=>{\r\n        loadData()\r\n    },[])\r\n\r\n    const handleEditButton = (id) =>{\r\n        const {handleEdit,history} = props\r\n\r\n        handleEdit(id)\r\n\r\n        history.replace(\"/form\")\r\n\r\n    }\r\n\r\n    const generateTableRow = () =>{\r\n        const {users,isLoading} = props\r\n        let rows = (\r\n            <tr>\r\n                <td><Spinner className=\"text-center\" type=\"grow\" aria-colspan={6} color=\"info\"/></td>\r\n            </tr>\r\n        )\r\n        if (!isLoading){\r\n            rows=(\r\n                <tr>\r\n                    <td colSpan={8} className=\"table-warning text-center\"><strong><em>No User(s) yet.</em></strong></td>\r\n                </tr>\r\n            )\r\n        }\r\n        if (users.length>0 && !isLoading){\r\n            rows = users.map((user,index)=>{\r\n                return(\r\n                    <tr key={index}>\r\n                        <th scope=\"row\">{index+1}</th>\r\n                        <td>{user.name}</td>\r\n                        <td>{user.birthDate}</td>\r\n                        <td>{user.ktp}</td>\r\n                        <td>{user.job}</td>\r\n                        <td>{user.lastEducation}</td>\r\n                        <td>\r\n                            <Button type=\"button\" color=\"warning\" size=\"sm\" className=\"shadow\"\r\n                                    onClick={()=>handleEditButton(user.id)}\r\n                            ><Icon icon=\"fas edit\"/> Edit</Button>\r\n                        </td>\r\n                        <td>\r\n                            <Button type=\"button\" color=\"danger\" size=\"sm\" className=\"shadow\"\r\n                                    onClick={()=>{\r\n                                        setUser(user.id)\r\n                                        toggle()\r\n                                    }}\r\n                            ><Icon icon=\"fas info\"/> Detail </Button>\r\n                        </td>\r\n                    </tr>\r\n                )\r\n            })\r\n        }\r\n        return rows;\r\n    }\r\n\r\n    return (\r\n        <Card className=\"shadow\">\r\n            <CardHeader tag=\"strong\">\r\n                <Row>\r\n                    <Col >\r\n                        <Link to=\"/form\">\r\n                            <Button color=\"primary\" className=\"shadow\"><Icon icon=\"fas plus\"/> Add</Button>\r\n                        </Link>\r\n                    </Col>\r\n                    <Col md={{size:7,offset:2}}>\r\n                        <h3>Employee List</h3>\r\n                    </Col>\r\n                </Row>\r\n            </CardHeader>\r\n            <Table striped hover responsive className=\"m-0\">\r\n                <thead>\r\n                    <tr>\r\n                        <th width=\"5%\">No.</th>\r\n                        <th>Name</th>\r\n                        <th>Birth Date</th>\r\n                        <th>KTP</th>\r\n                        <th>Job</th>\r\n                        <th>LastEducation</th>\r\n                        <th colSpan={2} width=\"15%\" className=\"text-center\">Actions</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {\r\n                        generateTableRow()\r\n                    }\r\n                </tbody>\r\n            </Table>\r\n            <Modal isOpen={open} toggle={toggle}>\r\n                {/*<ModalHeader toggle={toggle}><Icon icon=\"fas exclamation-triangle\" color=\"red\"/> Warning !</ModalHeader>*/}\r\n                {/*<ModalBody>Employee will permanently deleted, Are you sure to continue ?</ModalBody>*/}\r\n                {/*<ModalFooter>*/}\r\n                {/*    <Button onClick={handleDeleteButton} color=\"danger\">Yes</Button>*/}\r\n                {/*    <Button onClick={toggle} color=\"primary\" className=\"ml-2\">No</Button>*/}\r\n                {/*</ModalFooter>*/}\r\n            </Modal>\r\n            <Modal isOpen={modal} toggle={toggleButton}>\r\n                <ModalBody>\r\n                    {message}\r\n                </ModalBody>\r\n            </Modal>\r\n        </Card>\r\n    )\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {...state}\r\n}\r\n\r\nfunction mapDispatchToProps(dispatch) {\r\n    return {\r\n        handleEdit: (id) => dispatch({type:HANDLE_EDIT,payload: id}),\r\n        setLoading: () => dispatch({type:SET_LOADING}),\r\n        fetchComplete: (payload) => dispatch({type:FETCH_COMPLETE,payload})\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps,mapDispatchToProps)(withRouter(EmployeeList))"]},"metadata":{},"sourceType":"module"}